const generateBtn = document.getElementById('generate');
const qrContainer = document.getElementById('qrcode');
const downloadBtn = document.getElementById('download');
let qrCodeInstance = null;

generateBtn.addEventListener('click', () => {
  const text = document.getElementById('text').value.trim();
  qrContainer.innerHTML = "";
  downloadBtn.style.display = "none";

  if (text.length === 0) {
    alert("Please enter text or URL.");
    return;
  }

  qrCodeInstance = new QRCode(qrContainer, {
    text: text,
    width: 200,
    height: 200,
    colorDark: "#22223b",
    colorLight: "#fff",
    correctLevel: QRCode.CorrectLevel.H
  });

  // Show download button after QR is generated
  setTimeout(() => {
    downloadBtn.style.display = "inline-block";
  }, 300);
});

downloadBtn.addEventListener('click', () => {
  if (!qrCodeInstance) return;
  // Find the generated QR code <img>
  const img = qrContainer.querySelector('img');
  if (img) {
    const link = document.createElement('a');
    link.href = img.src;
    link.download = 'qrcode.png';
    link.click();
  } else {
    // If SVG is generated (fallback)
    const svg = qrContainer.querySelector('svg');
    if (svg) {
      const serializer = new XMLSerializer();
      const svgBlob = new Blob([serializer.serializeToString(svg)], {type: 'image/svg+xml'});
      const url = URL.createObjectURL(svgBlob);
      const link = document.createElement('a');
      link.href = url;
      link.download = 'qrcode.svg';
      link.click();
      URL.revokeObjectURL(url);
    }
  }
});
